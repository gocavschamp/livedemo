apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.fish.live"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a'
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        exclude '*.apk'
        exclude 'META-INF/rxjava.properties'
//        因为 NDK r17 之后不再支持 mips 平台，在 build.gradle 里增加如下配置可解决
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
        //tengxun live
        pickFirst '**/libc++_shared.so'
        doNotStrip "*/armeabi/libYTCommon.so"
        doNotStrip "*/armeabi-v7a/libYTCommon.so"
        doNotStrip "*/x86/libYTCommon.so"
        doNotStrip "*/arm64-v8a/libYTCommon.so"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    signingConfigs {
        member {
//            keyAlias 'fish'
//            keyPassword 'fish'
//            storePassword 'fish'
//            storeFile file('../keystore/nucarf.keystore')//todo
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "Boolean", "ENVIRONMENT", "true"
            //这里是给versionName添加后缀
            versionNameSuffix "_debug"
            //是否进行代码格式化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
//            signingConfig signingConfigs.member
            //开启混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    APP_IS_TEST_VALUE: true,
//                    HOST_URL_VALUE       : "http://2019_0418_invoice_new.api.yidian.nucarf.cn/V1/",
//                    WECHAT_HOST_URL_VALUE: "http://twechat.nucarf.cn",
//                    JPUSH_PKGNAME        : "com.nucarf.member",
//                    JPUSH_APPKEY         : "e516f2ff191ecad388c53974", //JPush 上注册的包名对应的 Appkey.
//                    JPUSH_CHANNEL        : "developer-default", //暂时填写默认值即可.
            ]
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "Boolean", "ENVIRONMENT", "false"
            zipAlignEnabled false// 移除无用的resource文件
//            signingConfig signingConfigs.member
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    APP_IS_TEST_VALUE: false,
//                    HOST_URL_VALUE       : "http://tapi.nucarf.cn/V1/",
//                    WECHAT_HOST_URL_VALUE: "https://wechat.nucarf.com",
//                    JPUSH_PKGNAME        : "com.nucarf.member",
//                    JPUSH_APPKEY         : "e516f2ff191ecad388c53974", //JPush 上注册的包名对应的 Appkey.
//                    JPUSH_CHANNEL        : "developer-default", //暂时填写默认值即可.
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                outputFileName = defaultConfig.applicationId.subSequence(defaultConfig.applicationId.lastIndexOf(".") + 1, defaultConfig.applicationId.length()) + "-v" + defaultConfig.versionName + "-" + releaseTime() + "-" + output.baseName + ".apk"
            }
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHH", TimeZone.getTimeZone("UTC"))
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}

greendao {
    schemaVersion 5 //数据库版本号 增加或删除表时需要增加 版本号
    daoPackage 'com.fish.live.database.db'
// 设置DaoMaster、DaoSession、Dao 包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    generateTests false //设置为true以自动生成单元测试。
    targetGenDirTests 'src/main/java' //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //数据库
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation project(':base')
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    //防抖动
    implementation 'com.github.liys666666:DoubleClick:V1.0.4'
    implementation 'org.jetbrains:annotations:15.0'
    //tencent
    implementation 'com.tencent.liteavsdk:LiteAVSDK_Smart:latest.release'//移动直播
    implementation 'com.tencent.teduboard:TEduBoardSdk:latest.release'//互动白板
    implementation 'com.tencent.imsdk:imsdk:latest.release'//im

    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
